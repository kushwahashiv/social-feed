var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AddFriendComponent.html",[0,0.455,1,0.931]],["body/components/AddFriendComponent.html",[0,0.717,1,1.378,2,0.293,3,0.241,4,1.22,5,1.22,6,1.22,7,0.191,8,3.454,9,2.5,10,1.686,11,1.22,12,2.614,13,2.27,14,3.041,15,1.794,16,3.074,17,1.794,18,3.074,19,0.628,20,1.366,21,4.02,22,1.561,23,3.242,24,4.02,25,1.22,26,2.09,27,3.734,28,3.646,29,4.02,30,2.94,31,1.806,32,2.94,33,4.02,34,1.786,35,3.074,36,1.061,37,0.05,38,1.747,39,0.924,40,0.929,41,3.074,42,2.09,43,2.09,44,2.94,45,3.074,46,2.479,47,2.479,48,2.087,49,3.074,50,3.074,51,3.074,52,1.561,53,1.561,54,2.09,55,4.02,56,0.673,57,0.293,58,1.061,59,2.475,60,1.22,61,1.686,62,1.22,63,0.241,64,0.35,65,1.419,66,2.346,67,2.09,68,0.716,69,2.09,70,3.646,71,3.646,72,2.09,73,3.074,74,2.09,75,2.09,76,3.646,77,2.475,78,2.475,79,2.94,80,2.09,81,2.09,82,2.09,83,2.09,84,1.686,85,1.686,86,1.686,87,1.686,88,2.09,89,1.053,90,4.479,91,3.074,92,3.074,93,3.074,94,3.074,95,0.628,96,1.794,97,1.794,98,1.794,99,2.346,100,1.22,101,1.22,102,0.477,103,1.199,104,1.22,105,0.549,106,1.22,107,0.716,108,0.816,109,1.22,110,1.22,111,0.028,112,0.028]],["title/components/AppComponent.html",[0,0.455,102,0.62]],["body/components/AppComponent.html",[0,0.834,1,1.089,2,0.446,3,0.366,4,1.855,5,1.855,6,1.855,7,0.29,11,1.855,12,2.978,13,1.412,15,2.398,17,2.398,19,0.955,20,1.825,34,1.412,37,0.051,38,1.603,39,0.955,56,0.532,57,0.446,63,0.366,64,0.532,95,0.955,96,2.398,97,2.398,98,2.398,99,2.808,100,1.855,101,1.855,102,1.098,103,1.991,104,1.855,105,0.835,106,1.855,107,1.089,108,1.24,109,1.855,110,1.855,111,0.038,112,0.038,113,2.563,114,4.108,115,4.108,116,4.108,117,4.811,118,2.085,119,1.613,120,1.613,121,3.178]],["title/modules/AppModule.html",[122,0.188,123,1.379]],["body/modules/AppModule.html",[2,0.32,3,0.262,7,0.208,37,0.05,56,0.868,57,0.32,58,1.156,63,0.481,64,0.548,68,0.78,95,0.684,102,1.173,103,0.888,111,0.03,112,0.03,122,0.226,123,2.583,124,0.78,125,1.701,126,1.701,127,1.453,128,1.836,129,1.836,130,1.836,131,1.836,132,2.05,133,1.581,134,1.66,135,1.156,136,1.156,137,1.329,138,2.638,139,2.221,140,1.329,141,1.493,142,2.638,143,1.836,144,2.638,145,2.638,146,2.638,147,3.087,148,2.638,149,3.374,150,2.638,151,2.638,152,2.638,153,2.638,154,2.638,155,2.638,156,3.087,157,3.087,158,3.374,159,3.087,160,2.638,161,3.374,162,2.638,163,2.638,164,2.638,165,2.638,166,2.638,167,2.638,168,2.638,169,2.638,170,2.638,171,2.638,172,2.638,173,2.638,174,2.638,175,2.638,176,2.638,177,3.087,178,3.087,179,2.638,180,1.546,181,1.546,182,2.638,183,1.836,184,2.221,185,1.546,186,2.638,187,1.546,188,1.546,189,1.836,190,1.546,191,2.638,192,1.329,193,1.329,194,1.546,195,1.546,196,1.546,197,1.546,198,2.442,199,1.546,200,1.546,201,1.546,202,1.546,203,1.546,204,1.546,205,1.546,206,1.546,207,1.546,208,1.546,209,1.836]],["title/modules/AppRoutingModule.html",[122,0.188,132,1.207]],["body/modules/AppRoutingModule.html",[0,0.61,2,0.511,3,0.419,7,0.333,37,0.051,56,0.846,57,0.511,63,0.515,64,0.61,68,1.248,102,1.021,111,0.041,112,0.041,122,0.252,132,1.989,141,1.746,181,2.472,210,2.472,211,2.125,212,2.828,213,2.272,214,1.618,215,3.039,216,2.936,217,2.936,218,2.936,219,3.641]],["title/components/DashboardComponent.html",[0,0.455,105,0.714]],["body/components/DashboardComponent.html",[0,0.604,1,0.789,2,0.202,3,0.165,4,0.838,5,0.838,6,0.838,7,0.131,9,0.838,11,0.838,12,2.248,13,1.869,14,3.022,15,1.344,17,1.344,19,0.432,20,1.023,22,1.169,25,0.838,27,2.659,30,2.324,31,1.807,32,1.158,34,2.091,36,1.463,37,0.051,38,1.408,39,1.264,40,1.281,44,2.659,46,2.659,47,1.857,48,2.239,52,1.956,53,1.956,56,0.604,57,0.202,58,0.729,59,1.563,62,1.344,63,0.165,64,0.24,66,0.838,68,0.492,84,1.158,85,1.158,86,1.158,87,1.158,89,1.237,95,0.432,96,1.344,97,1.344,98,1.344,99,1.925,100,0.838,101,0.838,102,0.328,103,1.503,104,0.838,105,0.866,106,0.838,107,0.492,108,1.408,109,0.838,110,0.838,111,0.021,112,0.021,118,1.463,119,0.729,120,0.729,220,1.158,221,2.302,222,2.882,223,1.857,224,2.302,225,2.302,226,3.343,227,3.297,228,3.297,229,4.047,230,2.021,231,3.609,232,3.297,233,3.297,234,3.297,235,2.302,236,3.297,237,1.563,238,1.436,239,3.852,240,2.302,241,1.436,242,2.302,243,1.957,244,2.302,245,2.302,246,2.302,247,2.302,248,2.302,249,1.857,250,2.302,251,2.302,252,2.302,253,2.239,254,1.436,255,1.563,256,2.533,257,1.857,258,1.436,259,2.302,260,1.436,261,2.324,262,1.563,263,2.659,264,1.857,265,1.857,266,2.302,267,2.302,268,1.436,269,2.659,270,2.302,271,1.857,272,3.609,273,1.436,274,1.857,275,2.239,276,1.563,277,1.344,278,2.302,279,1.436,280,1.682,281,1.436,282,1.436,283,1.436,284,1.436,285,1.436,286,1.436,287,1.436,288,1.158,289,1.436,290,0.838,291,0.975,292,1.436,293,1.436,294,1.436,295,1.436,296,1.436,297,2.302,298,1.436,299,2.882,300,1.436,301,1.436,302,1.436,303,1.682,304,1.436,305,1.436,306,1.436,307,1.436,308,1.436,309,1.344,310,1.436,311,1.436,312,1.436,313,1.436,314,2.302,315,2.302,316,2.302,317,2.302,318,2.302,319,3.297,320,2.302,321,2.302,322,1.857,323,2.302,324,2.302,325,2.302,326,2.302,327,2.302]],["title/modules/DashboardModule.html",[122,0.188,328,1.586]],["body/modules/DashboardModule.html",[2,0.431,3,0.354,7,0.281,37,0.05,56,0.899,57,0.431,60,1.794,63,0.463,64,0.515,95,0.924,105,1.328,111,0.037,112,0.037,122,0.278,124,1.053,125,1.99,126,1.366,127,1.366,133,1.733,134,2.041,135,1.56,136,1.56,141,1.568,180,2.087,213,2.041,214,1.366,223,2.479,328,3.187,329,2.479,330,2.479,331,2.479,332,2.567,333,2.247,334,2.567,335,3.074,336,2.729,337,1.794,338,2.087,339,2.479,340,2.479,341,3.241,342,3.074]],["title/modules/DashboardRoutingModule.html",[122,0.188,332,1.379]],["body/modules/DashboardRoutingModule.html",[0,0.636,2,0.533,3,0.437,7,0.347,37,0.051,56,0.859,57,0.533,63,0.437,64,0.636,68,1.303,105,1.207,111,0.042,112,0.042,122,0.263,141,1.793,211,2.219,212,2.882,213,1.93,214,1.689,215,2.581,332,2.333,339,3.066,343,2.581,344,3.801]],["title/components/FeedBoxComponent.html",[0,0.455,107,0.931]],["body/components/FeedBoxComponent.html",[0,0.811,1,0.834,2,0.342,3,0.28,4,1.421,5,1.421,6,1.421,7,0.222,11,1.421,12,2.753,13,1.082,15,2.002,17,2.002,19,0.732,22,1.742,34,1.765,36,1.236,37,0.05,38,1.55,39,1.194,40,1.082,52,1.236,53,1.236,56,0.408,57,0.342,63,0.28,64,0.408,89,1.176,95,0.732,96,2.002,97,2.002,98,2.002,99,2.517,100,1.421,101,1.421,102,0.555,103,1.338,104,1.421,105,1.194,106,1.421,107,1.478,108,1.99,109,2.319,110,1.421,111,0.031,112,0.031,118,2.189,237,3.203,243,1.653,256,2.753,264,2.766,274,2.766,275,2.928,276,2.329,277,2.002,303,1.421,345,3.478,346,2.928,347,1.963,348,3.43,349,3.43,350,4.313,351,4.313,352,3.972,353,2.434,354,2.434,355,3.972,356,2.434,357,3.43,358,2.434,359,4.313,360,4.313,361,3.43,362,3.43,363,3.43,364,2.434,365,3.43,366,3.43,367,2.434,368,3.43,369,4.313,370,3.43,371,2.434]],["title/injectables/FeedsApiService.html",[230,1.207,372,1.207]],["body/injectables/FeedsApiService.html",[2,0.204,3,0.167,7,0.133,19,0.437,20,1.033,22,2.316,25,1.695,34,2.064,36,1.685,37,0.052,38,1.295,39,1.418,40,1.475,52,2.211,53,1.475,56,0.556,57,0.204,59,2.253,63,0.167,64,0.486,65,0.986,66,2.26,68,1.244,89,0.498,108,1.511,111,0.021,112,0.021,118,2.483,119,1.685,120,1.685,192,0.848,226,3.285,230,1.033,237,1.578,253,1.578,255,1.972,256,2.881,257,1.171,262,2.253,269,2.677,271,1.874,275,3.154,276,1.578,277,2.373,280,1.695,290,1.695,291,1.578,303,2.26,309,0.848,372,1.613,373,3.805,374,0.986,375,2.677,376,2.677,377,3.319,378,3.319,379,3.319,380,1.171,381,2.927,382,2.324,383,2.677,384,2.677,385,1.874,386,2.927,387,1.453,388,1.874,389,2.629,390,2.324,391,3.319,392,1.453,393,1.453,394,2.324,395,1.453,396,2.342,397,2.927,398,2.324,399,1.453,400,1.171,401,2.677,402,3.319,403,2.253,404,2.677,405,1.453,406,1.874,407,3.278,408,2.324,409,1.453,410,3.319,411,4.224,412,3.319,413,3.278,414,1.453,415,2.904,416,2.904,417,1.453,418,2.324,419,0.986,420,1.453,421,1.453,422,1.171,423,1.453,424,1.171,425,1.874,426,1.171,427,1.453,428,0.986,429,1.171,430,1.171,431,1.171,432,1.453,433,2.342,434,1.453,435,2.324,436,1.453,437,1.453,438,1.453,439,1.171,440,1.453,441,1.453,442,1.453,443,1.453,444,1.453,445,2.324,446,1.453,447,1.453,448,2.324,449,1.453]],["title/modules/FeedsModule.html",[122,0.188,333,1.207]],["body/modules/FeedsModule.html",[2,0.435,3,0.357,7,0.283,37,0.05,56,0.886,57,0.435,62,1.809,63,0.548,64,0.519,95,0.931,107,1.855,111,0.037,112,0.037,122,0.279,124,1.062,125,1.998,126,1.377,127,1.998,133,1.737,134,2.052,135,1.573,136,1.573,141,1.577,184,3.053,185,2.104,213,2.052,214,1.377,230,2.252,333,2.39,336,2.744,337,1.809,338,2.104,346,2.104,450,2.499,451,2.499,452,3.099,453,2.499,454,2.499,455,3.099,456,3.099,457,3.099,458,3.099]],["title/modules/MaterialModule.html",[122,0.188,133,0.931]],["body/modules/MaterialModule.html",[2,0.354,3,0.29,7,0.23,37,0.05,56,0.877,57,0.354,58,1.28,63,0.466,64,0.589,68,0.864,102,0.924,103,0.984,111,0.032,112,0.032,122,0.174,123,1.28,125,1.121,126,1.121,127,1.121,132,1.563,133,1.387,137,1.472,138,2.836,139,2.387,140,1.472,141,1.58,142,2.836,143,2.034,144,2.836,145,2.836,146,2.836,147,3.265,148,2.836,149,3.532,150,2.836,151,2.836,152,2.836,153,2.836,154,2.836,155,2.836,156,3.265,157,3.265,158,3.532,159,3.265,160,2.836,161,3.532,162,2.836,163,2.836,164,2.836,165,2.836,166,2.836,167,2.836,168,2.836,169,2.836,170,2.836,171,2.836,172,2.836,173,2.836,174,2.836,175,2.836,176,2.836,177,3.265,178,3.265,179,2.836,180,1.712,181,1.712,182,2.836,183,2.034,184,2.387,185,1.712,186,2.836,187,1.712,188,1.712,189,2.034,190,1.712,191,2.836,192,1.472,193,1.472,194,1.712,195,1.712,196,1.712,197,1.712,198,2.557,199,1.712,200,1.712,201,1.712,202,1.712,203,1.712,204,1.712,205,1.712,206,1.712,207,1.712,208,1.712,209,2.034]],["title/interfaces/User.html",[89,0.931,459,1.586]],["body/interfaces/User.html",[2,0.5,3,0.41,7,0.325,19,1.07,20,1.961,37,0.05,38,1.957,39,1.55,40,1.961,63,0.41,77,3.405,78,3.405,79,4.044,89,1.513,111,0.04,112,0.04,118,2.754,407,3.869,428,3.405,459,2.577,460,2.871]],["title/injectables/UserApiService.html",[31,1.06,372,1.207]],["body/injectables/UserApiService.html",[2,0.288,3,0.236,7,0.188,13,1.348,14,2.705,19,0.617,20,1.348,22,2.399,23,2.445,25,2.105,31,1.183,34,2.045,36,1.539,37,0.051,38,1.407,39,1.278,40,1.348,52,2.158,53,1.539,56,0.667,57,0.288,63,0.236,64,0.604,65,1.393,66,2.105,68,0.703,77,1.393,78,1.393,89,1.796,108,1.183,111,0.028,112,0.028,119,1.042,120,1.042,192,1.198,226,3.276,253,2.059,255,2.059,256,2.325,261,2.445,262,2.705,277,2.597,280,2.105,290,2.325,291,2.059,303,1.77,309,1.198,372,1.889,374,1.393,375,3.213,376,3.213,380,1.655,381,3.428,383,3.213,384,3.213,385,2.445,386,3.428,388,2.445,389,2.705,396,3.213,397,3.213,400,1.655,401,3.213,403,2.059,404,3.213,406,2.445,419,1.393,422,1.655,424,1.655,425,2.909,426,1.655,428,1.393,429,1.655,430,1.655,431,1.655,439,1.655,461,3.811,462,3.984,463,3.032,464,3.032,465,2.052,466,2.052,467,2.052,468,3.032,469,3.032,470,2.052,471,2.052,472,2.052,473,2.052,474,2.052,475,2.052,476,2.052]],["title/modules/UserModule.html",[122,0.188,334,1.379]],["body/modules/UserModule.html",[1,1.789,2,0.429,3,0.352,7,0.279,9,1.784,13,1.358,31,1.97,37,0.05,56,0.892,57,0.429,60,1.784,61,2.465,62,1.784,63,0.461,64,0.512,95,0.919,111,0.037,112,0.037,122,0.277,124,1.048,125,1.985,126,1.358,127,1.985,133,1.73,134,2.033,135,1.552,136,1.552,141,1.563,213,2.033,214,1.358,288,2.465,333,2.244,334,2.742,336,2.719,337,1.784,338,2.075,340,2.465,341,3.23,477,2.465,478,2.465,479,3.057,480,2.465,481,3.057,482,4.005,483,4.005]],["title/coverage.html",[484,2.985]],["body/coverage.html",[0,0.801,1,1.074,7,0.286,8,2.527,9,1.829,10,2.527,31,1.223,37,0.05,39,0.942,89,1.074,102,0.715,105,0.823,107,1.074,111,0.037,112,0.037,113,2.527,137,1.829,193,1.829,210,2.128,211,2.376,212,2.376,220,2.527,230,1.392,243,2.128,343,2.128,345,2.527,346,2.128,347,2.527,372,1.809,373,2.527,374,2.763,413,4.277,459,1.829,460,2.527,461,2.527,484,2.527,485,2.527,486,3.134,487,3.134,488,3.514,489,5.175,490,3.134,491,3.134,492,3.134,493,3.134,494,3.134,495,3.134,496,3.134,497,3.134,498,3.134,499,3.134,500,3.134,501,3.134,502,2.527,503,3.282,504,2.527,505,3.282,506,2.527,507,2.527,508,3.134,509,3.134]],["title/dependencies.html",[124,1.119,510,2.272]],["body/dependencies.html",[37,0.051,57,0.483,58,1.747,60,2.008,111,0.039,112,0.039,124,1.179,139,2.934,140,2.522,187,2.336,188,2.336,190,2.336,214,1.529,337,2.008,389,2.336,419,2.934,511,3.441,512,5.394,513,3.441,514,4.321,515,3.441,516,4.321,517,3.441,518,3.441,519,3.441,520,3.441,521,3.441,522,3.441,523,3.441,524,3.441,525,3.441,526,3.441,527,3.441,528,3.441,529,3.441,530,3.441,531,3.441,532,3.441,533,3.441]],["title/index.html",[19,0.683,265,1.832,534,2.272]],["body/index.html",[3,0.477,7,0.295,37,0.038,48,2.189,103,1.788,108,1.258,111,0.038,112,0.038,124,1.105,198,2.42,249,2.6,263,2.6,290,1.882,485,3.343,535,3.223,536,5.412,537,3.223,538,4.145,539,3.223,540,3.223,541,3.223,542,3.223,543,3.223,544,4.582,545,4.582,546,4.837,547,3.223,548,3.223,549,3.223,550,3.223,551,3.223,552,3.223,553,3.223,554,5.21,555,4.145,556,4.145,557,3.223,558,4.145,559,3.223,560,2.6,561,4.145,562,4.145,563,5.004,564,4.145,565,4.145,566,3.223,567,4.837,568,3.223,569,3.223,570,3.223,571,3.223]],["title/modules.html",[122,0.256]],["body/modules.html",[37,0.042,111,0.042,112,0.042,122,0.267,123,1.963,132,1.718,133,1.325,140,3.011,322,4.16,328,2.257,332,1.963,333,1.718,334,1.963,403,3.377,572,5.159,573,5.418,574,4.974]],["title/overview.html",[575,2.985]],["body/overview.html",[0,0.483,1,1.488,31,1.693,37,0.05,63,0.332,95,0.867,102,1.157,105,1.14,107,1.738,111,0.035,112,0.035,122,0.266,123,2.649,124,0.988,125,1.282,126,1.282,127,1.282,128,2.326,129,2.326,130,2.326,131,2.326,132,1.929,133,1.702,134,1.957,135,1.464,136,1.464,230,1.929,328,3.125,329,2.326,330,2.326,331,2.326,332,2.203,333,2.362,334,2.699,372,1.282,433,2.326,450,2.326,451,2.326,453,2.326,454,2.326,459,1.684,477,2.326,478,2.326,480,2.326,575,2.326,576,2.884,577,2.884,578,2.884]],["title/miscellaneous/variables.html",[488,2.217,579,1.832]],["body/miscellaneous/variables.html",[0,0.644,19,0.865,37,0.051,39,1.492,102,0.656,105,0.756,111,0.035,112,0.035,119,2.52,120,2.52,137,1.679,193,2.53,194,1.953,195,1.953,196,1.953,197,1.953,198,2.701,199,1.953,200,1.953,201,1.953,202,1.953,203,1.953,204,1.953,205,1.953,206,1.953,207,1.953,208,1.953,210,1.953,211,2.701,212,3.076,215,2.943,216,2.32,217,2.32,218,2.32,280,1.679,309,2.246,343,1.953,488,1.953,502,2.32,503,4.003,504,2.32,505,2.32,506,3.496,507,3.496,560,3.103,579,2.32,580,2.877,581,3.847,582,2.877,583,2.877,584,2.877,585,2.877,586,4.964,587,2.877,588,2.877]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":413,"title":{},"body":{"injectables/FeedsApiService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":433,"title":{},"body":{"injectables/FeedsApiService.html":{},"overview.html":{}}}],["1.1.3",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":435,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["12/13",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["1526496472002",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["1526496472002.appspot.com",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["1526496472002.firebaseapp.com",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["1526496472002.firebaseio.com",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":578,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":324,"title":{},"body":{"components/DashboardComponent.html":{}}}],["25",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":577,"title":{},"body":{"overview.html":{}}}],["450px",{"_index":307,"title":{},"body":{"components/DashboardComponent.html":{}}}],["5.0.0",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["5/14",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":408,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["5000",{"_index":87,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["6.0.0",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":576,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["869849331288",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["87",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":73,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["9.!#$%&’*+/=?^_",{"_index":72,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["92",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["_snackbar",{"_index":41,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["action",{"_index":363,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["activ",{"_index":468,"title":{},"body":{"injectables/UserApiService.html":{}}}],["activeus",{"_index":227,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actual_compon",{"_index":110,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["ad",{"_index":84,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["add",{"_index":13,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{}}}],["addfriend",{"_index":23,"title":{},"body":{"components/AddFriendComponent.html":{},"injectables/UserApiService.html":{}}}],["addfriend(us",{"_index":464,"title":{},"body":{"injectables/UserApiService.html":{}}}],["addfriendcompon",{"_index":1,"title":{"components/AddFriendComponent.html":{}},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["address",{"_index":93,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["ag",{"_index":78,"title":{},"body":{"components/AddFriendComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["aizasyci9lmwcajx02mp2tthlj",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":383,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["angular/anim",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/t",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["angular/common",{"_index":337,"title":{},"body":{"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{}}}],["angular/compil",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":57,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":60,"title":{},"body":{"components/AddFriendComponent.html":{},"modules/DashboardModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":58,"title":{},"body":{"components/AddFriendComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angularfire2/databas",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"injectables/FeedsApiService.html":{},"modules/MaterialModule.html":{},"injectables/UserApiService.html":{}}}],["angularfiredatabas",{"_index":381,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["angularfiredatabasemodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["angularfirelist",{"_index":404,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["angularfiremodul",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["angularfiremodule.initializeapp(config",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["api.servic",{"_index":62,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{}}}],["api.service.t",{"_index":374,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["api.service.ts:104",{"_index":399,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:112",{"_index":395,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:12",{"_index":400,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["api.service.ts:16",{"_index":470,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:18",{"_index":417,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:20",{"_index":463,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:24",{"_index":409,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:29",{"_index":414,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:33",{"_index":405,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:34",{"_index":465,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:38",{"_index":382,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:50",{"_index":467,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:53",{"_index":392,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:58",{"_index":466,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:74",{"_index":393,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["api.service.ts:86",{"_index":387,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["apikey",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":103,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"modules/MaterialModule.html":{},"index.html":{}}}],["app.compon",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["app.component.html",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["app.modul",{"_index":338,"title":{},"body":{"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{}}}],["appcompon",{"_index":102,"title":{"components/AppComponent.html":{}},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appmodul",{"_index":123,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":132,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":555,"title":{},"body":{"index.html":{}}}],["authdomain",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["automat",{"_index":552,"title":{},"body":{"index.html":{}}}],["avail",{"_index":403,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"modules.html":{}}}],["b",{"_index":445,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["beta.14",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":397,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["bootstrap",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["box",{"_index":109,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["box.compon",{"_index":457,"title":{},"body":{"modules/FeedsModule.html":{}}}],["box.component.html",{"_index":349,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["box.component.scss",{"_index":348,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["box.component.t",{"_index":347,"title":{},"body":{"components/FeedBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:10",{"_index":353,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["box.component.ts:11",{"_index":356,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["box.component.ts:19",{"_index":358,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["box/fe",{"_index":346,"title":{},"body":{"components/FeedBoxComponent.html":{},"modules/FeedsModule.html":{},"coverage.html":{}}}],["brows",{"_index":573,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["browseranimationsmodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["browsermodul",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["build",{"_index":554,"title":{},"body":{"index.html":{}}}],["button",{"_index":251,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cancel",{"_index":94,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["canpoststatu",{"_index":228,"title":{},"body":{"components/DashboardComponent.html":{}}}],["career",{"_index":323,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cdktablemodul",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["chang",{"_index":263,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["check",{"_index":255,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["children",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":64,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{}}}],["clear",{"_index":315,"title":{},"body":{"components/DashboardComponent.html":{}}}],["clone",{"_index":538,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":329,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":330,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":331,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_feedsmodul",{"_index":450,"title":{},"body":{"modules/FeedsModule.html":{},"overview.html":{}}}],["cluster_feedsmodule_declar",{"_index":451,"title":{},"body":{"modules/FeedsModule.html":{},"overview.html":{}}}],["cluster_feedsmodule_export",{"_index":453,"title":{},"body":{"modules/FeedsModule.html":{},"overview.html":{}}}],["cluster_feedsmodule_import",{"_index":452,"title":{},"body":{"modules/FeedsModule.html":{}}}],["cluster_feedsmodule_provid",{"_index":454,"title":{},"body":{"modules/FeedsModule.html":{},"overview.html":{}}}],["cluster_usermodul",{"_index":477,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declar",{"_index":478,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_import",{"_index":479,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_provid",{"_index":480,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":541,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":336,"title":{},"body":{"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{}}}],["compani",{"_index":327,"title":{},"body":{"components/DashboardComponent.html":{}}}],["compat",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["compodoc/compodoc",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["component_templ",{"_index":100,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["components/dashboard.compon",{"_index":339,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["components/fe",{"_index":456,"title":{},"body":{"modules/FeedsModule.html":{}}}],["config",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":68,"title":{},"body":{"components/AddFriendComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"injectables/FeedsApiService.html":{},"modules/MaterialModule.html":{},"injectables/UserApiService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["constructor(_snackbar",{"_index":26,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["constructor(db",{"_index":380,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["constructor(feedsapiservic",{"_index":238,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(priv",{"_index":65,"title":{},"body":{"components/AddFriendComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["constructor(publ",{"_index":293,"title":{},"body":{"components/DashboardComponent.html":{}}}],["contact",{"_index":321,"title":{},"body":{"components/DashboardComponent.html":{}}}],["context",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":276,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{}}}],["coverag",{"_index":484,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":428,"title":{},"body":{"injectables/FeedsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["createform",{"_index":24,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["dashboard",{"_index":223,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DashboardModule.html":{}}}],["dashboard'},{'nam",{"_index":106,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["dashboard.component.html",{"_index":225,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":224,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":105,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodul",{"_index":328,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodul",{"_index":332,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["databas",{"_index":385,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["databaseurl",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["date:'medium",{"_index":367,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["date:\\'medium",{"_index":371,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["db",{"_index":386,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["declar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["default",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":34,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["depend",{"_index":124,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dev",{"_index":548,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":229,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dialogref",{"_index":32,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["dialogref.afterclosed().subscrib",{"_index":312,"title":{},"body":{"components/DashboardComponent.html":{}}}],["direct",{"_index":98,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["directori",{"_index":558,"title":{},"body":{"index.html":{}}}],["disableclos",{"_index":308,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dislik",{"_index":415,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["dist",{"_index":557,"title":{},"body":{"index.html":{}}}],["doc",{"_index":561,"title":{},"body":{"index.html":{}}}],["document",{"_index":485,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["download",{"_index":535,"title":{},"body":{"index.html":{}}}],["dump",{"_index":571,"title":{},"body":{"index.html":{}}}],["durat",{"_index":86,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["dynam",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":267,"title":{},"body":{"components/DashboardComponent.html":{}}}],["e.valu",{"_index":313,"title":{},"body":{"components/DashboardComponent.html":{}}}],["e2",{"_index":568,"title":{},"body":{"index.html":{}}}],["element",{"_index":97,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["email",{"_index":79,"title":{},"body":{"components/AddFriendComponent.html":{},"interfaces/User.html":{}}}],["email_regex",{"_index":69,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["emit",{"_index":360,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["end",{"_index":567,"title":{},"body":{"index.html":{}}}],["enter",{"_index":92,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["entrycompon",{"_index":482,"title":{},"body":{"modules/UserModule.html":{}}}],["environ",{"_index":503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["etc",{"_index":51,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["event",{"_index":354,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["eventemitt",{"_index":355,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["execut",{"_index":564,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["f?.payload?.val()?.loc",{"_index":318,"title":{},"body":{"components/DashboardComponent.html":{}}}],["f?.payload?.val()?.nam",{"_index":317,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facebook",{"_index":50,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["fals",{"_index":280,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["favorit",{"_index":370,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["fb",{"_index":28,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["featur",{"_index":47,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["feed",{"_index":108,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["feed.git",{"_index":540,"title":{},"body":{"index.html":{}}}],["feed?.createdat",{"_index":366,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["feed?.text",{"_index":368,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["feed?.us",{"_index":365,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["feedboxcompon",{"_index":107,"title":{"components/FeedBoxComponent.html":{}},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"modules/FeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["feeds/feeds.modul",{"_index":340,"title":{},"body":{"modules/DashboardModule.html":{},"modules/UserModule.html":{}}}],["feeds/services/fe",{"_index":285,"title":{},"body":{"components/DashboardComponent.html":{}}}],["feedsapiservic",{"_index":230,"title":{"injectables/FeedsApiService.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["feedsapiservice.maxlength",{"_index":319,"title":{},"body":{"components/DashboardComponent.html":{}}}],["feedsmodul",{"_index":333,"title":{"modules/FeedsModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"coverage.html":{},"index.html":{}}}],["find",{"_index":242,"title":{},"body":{"components/DashboardComponent.html":{}}}],["findnewfriend",{"_index":232,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fire",{"_index":384,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["firebas",{"_index":389,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"dependencies.html":{}}}],["flag",{"_index":290,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["flexlayoutmodul",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["formbuild",{"_index":29,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["formgroup",{"_index":55,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["formsmodul",{"_index":341,"title":{},"body":{"modules/DashboardModule.html":{},"modules/UserModule.html":{}}}],["friend",{"_index":14,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"injectables/UserApiService.html":{}}}],["friend'},{'nam",{"_index":101,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["friend.compon",{"_index":288,"title":{},"body":{"components/DashboardComponent.html":{},"modules/UserModule.html":{}}}],["friend.component.html",{"_index":18,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["friend.component.scss",{"_index":16,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["friend.component.t",{"_index":10,"title":{},"body":{"components/AddFriendComponent.html":{},"coverage.html":{}}}],["friend.component.ts:12",{"_index":35,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["friend.component.ts:22",{"_index":54,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["friend.component.ts:35",{"_index":43,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["friend/add",{"_index":9,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["function",{"_index":359,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["get",{"_index":265,"title":{"index.html":{}},"body":{"components/DashboardComponent.html":{}}}],["git",{"_index":537,"title":{},"body":{"index.html":{}}}],["graph",{"_index":574,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":362,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["hasbackdrop",{"_index":310,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":96,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["http://localhost:4200",{"_index":551,"title":{},"body":{"index.html":{}}}],["httpclientmodul",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{}}}],["https://github.com/kushwahashiv/soci",{"_index":539,"title":{},"body":{"index.html":{}}}],["https://mi",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["i.",{"_index":264,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["icon",{"_index":250,"title":{},"body":{"components/DashboardComponent.html":{}}}],["identifi",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":221,"title":{},"body":{"components/DashboardComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{}}}],["inject",{"_index":372,"title":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"overview.html":{}}}],["inprogress",{"_index":375,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["input",{"_index":350,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["instal",{"_index":544,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":459,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/us",{"_index":471,"title":{},"body":{"injectables/UserApiService.html":{}}}],["invalid",{"_index":90,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["invit",{"_index":46,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["isnan(parseint(feed.payload.val()[react",{"_index":434,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["isstatusvalid",{"_index":233,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item",{"_index":262,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["itemsref",{"_index":376,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["js",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":566,"title":{},"body":{"index.html":{}}}],["kushwaha",{"_index":326,"title":{},"body":{"components/DashboardComponent.html":{}}}],["latestfe",{"_index":379,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["layout",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["legend",{"_index":95,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/FeedBoxComponent.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":411,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["list",{"_index":253,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["loadchildren",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":542,"title":{},"body":{"index.html":{}}}],["locat",{"_index":77,"title":{},"body":{"components/AddFriendComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["log",{"_index":469,"title":{},"body":{"injectables/UserApiService.html":{}}}],["love",{"_index":416,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["machin",{"_index":543,"title":{},"body":{"index.html":{}}}],["manual",{"_index":248,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":420,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["map(r",{"_index":441,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["matautocompletemodul",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matbadgemodul",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matbottomsheetmodul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matbuttontogglemodul",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["match",{"_index":112,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matchipsmodul",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matdatepickermodul",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matdialog",{"_index":239,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matdialogconfig",{"_index":289,"title":{},"body":{"components/DashboardComponent.html":{}}}],["matdialogmodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":33,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["matdividermodul",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["materialmodul",{"_index":133,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matformfieldmodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matgridlistmodul",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["maticonmodul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matpaginatormodul",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matradiomodul",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matripplemodul",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matselectmodul",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":27,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["matsnackbarmodul",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matsortmodul",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["mattablemodul",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["mattreemodul",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["maximum",{"_index":410,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["maxlength",{"_index":377,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["message'",{"_index":274,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["messagingsenderid",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["method",{"_index":22,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["minimum",{"_index":412,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["minlength",{"_index":378,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["miscellan",{"_index":579,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":122,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"modules/UserModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["nah",{"_index":292,"title":{},"body":{"components/DashboardComponent.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["navig",{"_index":550,"title":{},"body":{"index.html":{}}}],["need",{"_index":247,"title":{},"body":{"components/DashboardComponent.html":{}}}],["new",{"_index":243,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"coverage.html":{}}}],["next",{"_index":252,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ng",{"_index":546,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"modules/UserModule.html":{}}}],["ngoninit",{"_index":234,"title":{},"body":{"components/DashboardComponent.html":{}}}],["npm",{"_index":545,"title":{},"body":{"index.html":{}}}],["number",{"_index":407,"title":{},"body":{"injectables/FeedsApiService.html":{},"interfaces/User.html":{}}}],["object",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":401,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["ok",{"_index":85,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["on",{"_index":246,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onchang",{"_index":235,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onchange(",{"_index":259,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oninit",{"_index":222,"title":{},"body":{"components/DashboardComponent.html":{}}}],["option",{"_index":40,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["output",{"_index":351,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["overview",{"_index":575,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":510,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":303,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["paramet",{"_index":36,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["parent",{"_index":361,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["parseint(feed.payload.val()[react",{"_index":436,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["particular",{"_index":278,"title":{},"body":{"components/DashboardComponent.html":{}}}],["path",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":426,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["platform",{"_index":270,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pleas",{"_index":91,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["possibl",{"_index":418,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["post",{"_index":269,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{}}}],["post(statu",{"_index":390,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["poststatu",{"_index":236,"title":{},"body":{"components/DashboardComponent.html":{}}}],["privat",{"_index":66,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["prod",{"_index":559,"title":{},"body":{"index.html":{}}}],["product",{"_index":560,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":44,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["progress",{"_index":396,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["project",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["protractor",{"_index":569,"title":{},"body":{"index.html":{}}}],["provid",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["ps",{"_index":244,"title":{},"body":{"components/DashboardComponent.html":{}}}],["public",{"_index":226,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["r.revers",{"_index":447,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["r.sort((x",{"_index":442,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["rc.10",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["react",{"_index":237,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{}}}],["react(act",{"_index":357,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["react(react",{"_index":271,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{}}}],["reaction",{"_index":275,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{}}}],["reactions[react",{"_index":437,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["reactiveformsmodul",{"_index":483,"title":{},"body":{"modules/UserModule.html":{}}}],["recent",{"_index":388,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["ref",{"_index":406,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["reload",{"_index":553,"title":{},"body":{"index.html":{}}}],["requir",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":111,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":52,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["role",{"_index":311,"title":{},"body":{"components/DashboardComponent.html":{}}}],["root",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":104,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["rout",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{}}}],["routermodule.forchild(rout",{"_index":344,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/MaterialModule.html":{}}}],["routing.module.t",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":536,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":419,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":421,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["sampl",{"_index":245,"title":{},"body":{"components/DashboardComponent.html":{}}}],["screen",{"_index":570,"title":{},"body":{"index.html":{}}}],["search",{"_index":314,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":291,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["select",{"_index":261,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/UserApiService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["send",{"_index":394,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["serv",{"_index":547,"title":{},"body":{"index.html":{}}}],["server",{"_index":549,"title":{},"body":{"index.html":{}}}],["services/fe",{"_index":458,"title":{},"body":{"modules/FeedsModule.html":{}}}],["services/us",{"_index":61,"title":{},"body":{"components/AddFriendComponent.html":{},"modules/UserModule.html":{}}}],["shiv",{"_index":325,"title":{},"body":{"components/DashboardComponent.html":{}}}],["site",{"_index":49,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["snackbar",{"_index":30,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{}}}],["social",{"_index":48,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"modules/FeedsModule.html":{},"modules/MaterialModule.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"index.html":{}}}],["spec\\.t",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.t",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dashboard",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/components/dashboard.component.t",{"_index":220,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:13",{"_index":279,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:14",{"_index":283,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:16",{"_index":240,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:18",{"_index":282,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:19",{"_index":284,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:20",{"_index":281,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:24",{"_index":258,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:32",{"_index":254,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:39",{"_index":268,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:55",{"_index":273,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:64",{"_index":241,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/components/dashboard.component.ts:78",{"_index":260,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard",{"_index":343,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/dashboard.module#dashboardmodul",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/dashboard/dashboard.module.t",{"_index":335,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/feeds/components/fe",{"_index":345,"title":{},"body":{"components/FeedBoxComponent.html":{},"coverage.html":{}}}],["src/app/feeds/feeds.module.t",{"_index":455,"title":{},"body":{"modules/FeedsModule.html":{}}}],["src/app/feeds/services/fe",{"_index":373,"title":{},"body":{"injectables/FeedsApiService.html":{},"coverage.html":{}}}],["src/app/user/add",{"_index":8,"title":{},"body":{"components/AddFriendComponent.html":{},"coverage.html":{}}}],["src/app/user/interfaces/user.t",{"_index":460,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/user/services/us",{"_index":461,"title":{},"body":{"injectables/UserApiService.html":{},"coverage.html":{}}}],["src/app/user/user.module.t",{"_index":481,"title":{},"body":{"modules/UserModule.html":{}}}],["src/environments/environment.prod.t",{"_index":502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":534,"title":{"index.html":{}},"body":{}}],["statement",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":256,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["status",{"_index":402,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["status.trim().length",{"_index":448,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["statusmessag",{"_index":231,"title":{},"body":{"components/DashboardComponent.html":{}}}],["statusmessage.length",{"_index":320,"title":{},"body":{"components/DashboardComponent.html":{}}}],["statusobject",{"_index":272,"title":{},"body":{"components/DashboardComponent.html":{}}}],["storagebucket",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":556,"title":{},"body":{"index.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"interfaces/User.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["substitut",{"_index":45,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["support",{"_index":322,"title":{},"body":{"components/DashboardComponent.html":{},"modules.html":{}}}],["sv",{"_index":429,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["svg",{"_index":572,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["test",{"_index":563,"title":{},"body":{"index.html":{}}}],["text",{"_index":257,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{}}}],["this.activeus",{"_index":299,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.canpoststatu",{"_index":296,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.createform",{"_index":67,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["this.db.list('/status",{"_index":423,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["this.db.list('/us",{"_index":472,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.dialog.open(addfriendcompon",{"_index":305,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dialogref.close(this.userform.valu",{"_index":88,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["this.fb.group",{"_index":75,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["this.feedsapiservice.latestfe",{"_index":294,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.feedsapiservice.post(this.statusmessag",{"_index":300,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.feedsapiservice.react(react",{"_index":304,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.feedsapiservice.upd",{"_index":298,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.feedsapiservice.valid(this.statusmessag",{"_index":297,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.inprogress",{"_index":425,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["this.item",{"_index":439,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["this.itemsref",{"_index":422,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["this.itemsref.push(payload).then",{"_index":431,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["this.itemsref.snapshotchang",{"_index":476,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.itemsref.snapshotchanges().pip",{"_index":440,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["this.itemsref.update(feed.key",{"_index":438,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["this.minlength",{"_index":449,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["this.reactions.indexof(react",{"_index":432,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["this.snackbar.open('friend",{"_index":83,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["this.snackbar.open('pleas",{"_index":302,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.statusmessag",{"_index":301,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.upd",{"_index":424,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["this.useractions.emit(act",{"_index":364,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["this.userapiservice.addfriend(this.userform.valu",{"_index":82,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["this.userapiservice.userslist",{"_index":295,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.userform",{"_index":74,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["this.userform.valid",{"_index":81,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["thumb_up_alt",{"_index":369,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["timestamp",{"_index":430,"title":{},"body":{"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["titl",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["trigger",{"_index":266,"title":{},"body":{"components/DashboardComponent.html":{}}}],["true",{"_index":309,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":562,"title":{},"body":{"index.html":{}}}],["updat",{"_index":277,"title":{},"body":{"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["us",{"_index":249,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["user",{"_index":89,"title":{"interfaces/User.html":{}},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["user.ag",{"_index":474,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.loc",{"_index":475,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.nam",{"_index":473,"title":{},"body":{"injectables/UserApiService.html":{}}}],["user.payload.val().nam",{"_index":316,"title":{},"body":{"components/DashboardComponent.html":{}}}],["user/add",{"_index":287,"title":{},"body":{"components/DashboardComponent.html":{}}}],["user/services/us",{"_index":286,"title":{},"body":{"components/DashboardComponent.html":{}}}],["user/user.modul",{"_index":342,"title":{},"body":{"modules/DashboardModule.html":{}}}],["useract",{"_index":352,"title":{},"body":{"components/FeedBoxComponent.html":{}}}],["userapiservic",{"_index":31,"title":{"injectables/UserApiService.html":{}},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"injectables/UserApiService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userform",{"_index":21,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["usermodul",{"_index":334,"title":{"modules/UserModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userref",{"_index":391,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["userref.payload.val().nam",{"_index":427,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["userslist",{"_index":462,"title":{},"body":{"injectables/UserApiService.html":{}}}],["valid",{"_index":59,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{}}}],["valid(statu",{"_index":398,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["validators.pattern(email_regex",{"_index":80,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["validators.requir",{"_index":76,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["valu",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":99,"title":{},"body":{"components/AddFriendComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{}}}],["variabl",{"_index":488,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":565,"title":{},"body":{"index.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AddFriendComponent.html":{},"components/DashboardComponent.html":{},"components/FeedBoxComponent.html":{},"injectables/FeedsApiService.html":{},"injectables/UserApiService.html":{}}}],["width",{"_index":306,"title":{},"body":{"components/DashboardComponent.html":{}}}],["x.payload.val().createdat",{"_index":444,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["y",{"_index":443,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["y.payload.val().createdat",{"_index":446,"title":{},"body":{"injectables/FeedsApiService.html":{}}}],["ye",{"_index":42,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["ys3rzdqqia6k",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":71,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["za",{"_index":70,"title":{},"body":{"components/AddFriendComponent.html":{}}}],["zone.j",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FeedsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddFriendComponent.html":{"url":"components/AddFriendComponent.html","title":"component - AddFriendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddFriendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/add-friend/add-friend.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                add-friend\n            \n\n            \n                styleUrls\n                add-friend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-friend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                createForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_snackBar: MatSnackBar, fb: FormBuilder, snackBar: MatSnackBar, userApiService: UserApiService, dialogRef?: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/add-friend/add-friend.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                    UserApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addFriend\n                            \n                            \n                        \n                    \n                \n                \n                    \naddFriend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/add-friend/add-friend.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Add a friend to your profile. This is a substitute of invite a friend feature in social sites facebook etc.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/add-friend/add-friend.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/add-friend/add-friend.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {MatDialogRef, MatSnackBar} from '@angular/material';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserApiService} from '../services/user-api.service';\n\n@Component({\n  selector: 'add-friend',\n  templateUrl: './add-friend.component.html',\n  styleUrls: ['./add-friend.component.scss']\n})\nexport class AddFriendComponent {\n  userForm: FormGroup;\n\n  constructor(private _snackBar: MatSnackBar,\n              private fb: FormBuilder,\n              private snackBar: MatSnackBar,\n              private userApiService: UserApiService,\n              private dialogRef?: MatDialogRef) {\n    this.createForm();\n  }\n\n  createForm() {\n    const EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    this.userForm = this.fb.group({\n      name: ['', Validators.required],\n      location: ['', Validators.required],\n      age: ['', Validators.required],\n      email: ['', [Validators.pattern(EMAIL_REGEX)]]\n    });\n  }\n\n  /**\n   * Add a friend to your profile. This is a substitute of invite a friend feature in social sites facebook etc.\n   */\n  addFriend() {\n    if (this.userForm.valid) {\n      this.userApiService.addFriend(this.userForm.value);\n      this.snackBar.open('Friend added to your profile', 'Ok', {duration: 5000});\n      this.dialogRef.close(this.userForm.value);\n    }\n  }\n}\n\n\n    \n\n    \n        Add User\n\n  \n    \n      \n        \n          \n          Name is invalid\n        \n\n        \n          \n          Age is invalid\n        \n\n        \n          \n          \n            Please enter a valid email address\n          \n        \n\n        \n          \n          Location is invalid\n        \n      \n    \n  \n\n\n\n\n  Cancel\n  Add\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add User                                        Name is invalid                                    Age is invalid                                                Please enter a valid email address                                              Location is invalid                      Cancel  Add'\n    var COMPONENTS = [{'name': 'AddFriendComponent', 'selector': 'add-friend'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FeedBoxComponent', 'selector': 'feed-box'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddFriendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddFriendComponent', 'selector': 'add-friend'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FeedBoxComponent', 'selector': 'feed-box'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFireDatabaseModule} from 'angularfire2/database';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatCardModule,\n    MatIconModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n  ]\n})\nexport class MaterialModule {\n}\n\nconst config = {\n  apiKey: 'AIzaSyCi9LMwCAjX02Mp2ttHlJ-Ys3rZDqQiA6k',\n  authDomain: 'my-project-1526496472002.firebaseapp.com',\n  databaseURL: 'https://my-project-1526496472002.firebaseio.com',\n  projectId: 'my-project-1526496472002',\n  storageBucket: 'my-project-1526496472002.appspot.com',\n  messagingSenderId: '869849331288'\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MaterialModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(config),\n    AngularFireDatabaseModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Route, RouterModule} from '@angular/router';\nimport {AppComponent} from './app.component';\n\nconst routes: Route[] = [\n  {\n    path: '',\n    component: AppComponent,\n    children: [\n      {path: '', loadChildren: 'src/app/dashboard/dashboard.module#DashboardModule'}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeUser\n                            \n                            \n                                    Public\n                                canPostStatus\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                feedsApiService\n                            \n                            \n                                    Public\n                                statusMessage\n                            \n                            \n                                    Public\n                                userApiService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findNewFriend\n                            \n                            \n                                isStatusValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                postStatus\n                            \n                            \n                                react\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(feedsApiService: FeedsApiService, userApiService: UserApiService, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/dashboard.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feedsApiService\n                                                  \n                                                        \n                                                                    FeedsApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                    UserApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findNewFriend\n                            \n                            \n                        \n                    \n                \n                \n                    \nfindNewFriend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Find a new friend to add in your profile.\nPS: This sample app do not have invite friend invite feature but one need to manually add a friend to his profile using\n\nicon button next to friend list.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStatusValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisStatusValid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Check is users status text is valid\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            In select item change i.e. user change this gets trigger\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \npostStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Post status on the social platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            react\n                            \n                            \n                        \n                    \n                \n                \n                    \nreact(reaction: any, statusObject: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Status message's reaction count update on a particular status feed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reaction\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        statusObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeUser:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canPostStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canPostStatus:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            feedsApiService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        feedsApiService:     FeedsApiService\n\n                    \n                \n                    \n                        \n                            Type :     FeedsApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApiService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userApiService:     UserApiService\n\n                    \n                \n                    \n                        \n                            Type :     UserApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/components/dashboard.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FeedsApiService} from '../../feeds/services/feeds-api.service';\nimport {UserApiService} from '../../user/services/user-api.service';\nimport {AddFriendComponent} from '../../user/add-friend/add-friend.component';\nimport {MatDialog, MatDialogConfig, MatSnackBar} from '@angular/material';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  public activeUser: any;\n  public statusMessage: string;\n  // Flag to see if a new statusMessage can be added or nah\n  public canPostStatus = false;\n\n  constructor(public feedsApiService: FeedsApiService,\n              public userApiService: UserApiService,\n              public dialog: MatDialog,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.feedsApiService.latestFeeds();\n    this.userApiService.usersList();\n  }\n\n  /**\n   * Check is users status text is valid\n   */\n  isStatusValid() {\n    this.canPostStatus = this.feedsApiService.valid(this.statusMessage) && this.feedsApiService.updating() === false;\n  }\n\n  /**\n   * Post status on the social platform\n   */\n  postStatus() {\n    if (this.activeUser) {\n      if (this.feedsApiService.valid(this.statusMessage)) {\n        this.feedsApiService.post(this.statusMessage, this.activeUser);\n      }\n      this.statusMessage = '';\n    } else {\n      this.snackBar.open('Please select a user to add a status', 'Ok', {duration: 5000});\n    }\n  }\n\n  /**\n   * Status message's reaction count update on a particular status feed\n   * @param reaction\n   * @param statusObject\n   */\n  react(reaction: any, statusObject: any) {\n    this.feedsApiService.react(reaction, statusObject);\n  }\n\n  /**\n   * Find a new friend to add in your profile.\n   * PS: This sample app do not have invite friend invite feature but one need to manually add a friend to his profile using\n   * + icon button next to friend list.\n   */\n  findNewFriend() {\n    const dialogRef = this.dialog.open(AddFriendComponent, {\n      width: '450px',\n      disableClose: true,\n      hasBackdrop: true,\n      role: 'dialog',\n    });\n    dialogRef.afterClosed().subscribe();\n  }\n\n  /**\n   * In select item change i.e. user change this gets trigger\n   * @param e\n   */\n  onChange(e: any) {\n    this.activeUser = e.value;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      search\n    \n    \n      \n        \n      \n      \n        clear\n      \n    \n  \n\n\n  \n  \n    \n      \n        {{ user.payload.val().name }}\n      \n    \n  \n\n\n\n\n  \n    \n      \n        Friend List\n      \n      \n        add\n      \n    \n    \n    \n      \n        \n          \n          {{f?.payload?.val()?.name}}, {{f?.payload?.val()?.location}}\n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n            {{feedsApiService.maxLength - statusMessage.length}}/\n            {{feedsApiService.maxLength}}\n          \n        \n        Post\n        \n      \n    \n\n    \n      \n        \n        \n      \n    \n  \n\n\n\n\n\n  \n    \n\n    \n      \n        \n          \n            About\n            Contact Us\n          \n        \n        \n          \n            Support\n            Careers\n          \n        \n      \n      \n        ©2018 Social-Feed | a Shiv Kushwaha company.\n      \n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    search                                          clear                                  {{ user.payload.val().name }}                                Friend List                    add                                                    {{f?.payload?.val()?.name}}, {{f?.payload?.val()?.location}}                                                                                  {{feedsApiService.maxLength - statusMessage.length}}/            {{feedsApiService.maxLength}}                          Post                                                                                                      About            Contact Us                                                Support            Careers                                      ©2018 Social-Feed | a Shiv Kushwaha company.            '\n    var COMPONENTS = [{'name': 'AddFriendComponent', 'selector': 'add-friend'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FeedBoxComponent', 'selector': 'feed-box'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nFeedsModule\n\nFeedsModule\n\nDashboardModule -->\n\nFeedsModule->DashboardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nDashboardModule -->\n\nMaterialModule->DashboardModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nDashboardModule -->\n\nUserModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DashboardRoutingModule\n                            \n                            \n                                    FeedsModule\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    UserModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {MaterialModule} from '../app.module';\nimport {DashboardRoutingModule} from './dashboard-routing.module';\nimport {DashboardComponent} from './components/dashboard.component';\nimport {FeedsModule} from '../feeds/feeds.module';\nimport {FormsModule} from '@angular/forms';\nimport {UserModule} from '../user/user.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    DashboardRoutingModule,\n    MaterialModule,\n    FeedsModule,\n    UserModule\n  ],\n  declarations: [\n    DashboardComponent\n  ]\n\n})\nexport class DashboardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {Route, RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {DashboardComponent} from './components/dashboard.component';\n\nconst routes: Route[] = [\n  {path: '', component: DashboardComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class DashboardRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedBoxComponent.html":{"url":"components/FeedBoxComponent.html","title":"component - FeedBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feeds/components/feed-box/feed-box.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                feed-box\n            \n\n            \n                styleUrls\n                feed-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed-box.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                react\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                feed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                userActions\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        feed\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/feeds/components/feed-box/feed-box.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        userActions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/feeds/components/feed-box/feed-box.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            react\n                            \n                            \n                        \n                    \n                \n                \n                    \nreact(action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/feeds/components/feed-box/feed-box.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            When a user reacts to a status this function emits that status to its parent component\ni.e. DashboardComponent. In react function of DashboardComponent\nwe handle this emitted reaction to update the status message's reaction count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'feed-box',\n  templateUrl: './feed-box.component.html',\n  styleUrls: ['./feed-box.component.scss']\n})\n\nexport class FeedBoxComponent {\n  @Input() feed: any;\n  @Output() userActions = new EventEmitter();\n\n  /**\n   * When a user reacts to a status this function emits that status to its parent component\n   * i.e. DashboardComponent. In react function of DashboardComponent\n   * we handle this emitted reaction to update the status message's reaction count.\n   * @param {string} action\n   */\n  react(action: string) {\n    this.userActions.emit(action);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{feed?.user}}\n      {{feed?.createdAt | date:'medium'}}\n    \n    \n    \n      {{feed?.text}}\n    \n  \n  \n    \n      thumb_up_alt\n    \n\n    \n      thumb_up_alt\n    \n\n    \n      favorite\n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{feed?.user}}      {{feed?.createdAt | date:\\'medium\\'}}                  {{feed?.text}}                  thumb_up_alt              thumb_up_alt              favorite      '\n    var COMPONENTS = [{'name': 'AddFriendComponent', 'selector': 'add-friend'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FeedBoxComponent', 'selector': 'feed-box'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedsApiService.html":{"url":"injectables/FeedsApiService.html","title":"injectable - FeedsApiService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FeedsApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feeds/services/feeds-api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                inProgress\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                itemsRef\n                            \n                            \n                                    Public\n                                maxLength\n                            \n                            \n                                    Public\n                                minLength\n                            \n                            \n                                    Private\n                                reactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                latestFeeds\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                react\n                            \n                            \n                                updating\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/feeds/services/feeds-api.service.ts:38\n                            \n                        \n\n                \n                    \n                            Class constructor, injects the angular fire database as db\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestFeeds\n                            \n                            \n                        \n                    \n                \n                \n                    \nlatestFeeds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Method to get the recent feeds from Firebase\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        post(status: string, userRef: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Method to post the status to Firebase\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userRef\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            react\n                            \n                            \n                        \n                    \n                \n                \n                    \nreact(reaction: string, feed: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Method to send a reaction to a status to Firebase\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reaction\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        feed\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updating\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdating()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Method to check the in progress flag\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valid\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalid(status: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:104\n                            \n                        \n\n\n                \n                    \n                            Method to check the validity of a status update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inProgress:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:12\n                            \n                        \n\n                \n                    \n                        Flag to see if status update is in progress\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:38\n                            \n                        \n\n                \n                    \n                        All the statuses available\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemsRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsRef:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:33\n                            \n                        \n\n                \n                    \n                        angular fire list ref for statuses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:24\n                            \n                        \n\n                \n                    \n                        The maximum length and minimum length of a status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:29\n                            \n                        \n\n                \n                    \n                        The maximum length and minimum length of a status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reactions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reactions:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['like', 'dislike', 'love']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/feeds/services/feeds-api.service.ts:18\n                            \n                        \n\n                \n                    \n                        Possible available reactions\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireList} from 'angularfire2/database';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class FeedsApiService {\n  /**\n   * Flag to see if status update is in progress\n   * @type {boolean}\n   */\n  private inProgress = false;\n\n  /**\n   * Possible available reactions\n   * @type {string[]}\n   */\n  private reactions: string[] = ['like', 'dislike', 'love'];\n\n  /**\n   * The maximum length and minimum length of a status\n   * @type {number}\n   */\n  public maxLength = 500;\n  /**\n   * The maximum length and minimum length of a status\n   * @type {number}\n   */\n  public minLength = 0;\n  /**\n   * angular fire list ref for statuses\n   */\n  public itemsRef: AngularFireList;\n\n  /**\n   * All the statuses available\n   */\n  public items: Observable;\n\n  /**\n   * Class constructor, injects the angular fire database as db\n   * @param {AngularFireDatabase} db\n   */\n  constructor(private db: AngularFireDatabase) {\n    this.itemsRef = this.db.list('/statuses');\n  }\n\n  /**\n   * Method to post the status to Firebase\n   * @param {string} status\n   * @param userRef\n   */\n  public post(status: string, userRef: any) {\n    if (!this.updating()) {\n\n      this.inProgress = true;\n      const payload = {\n        text: status,\n        like: 0,\n        dislike: 0,\n        love: 0,\n        user: userRef.payload.val().name,\n        createdAt: {'.sv': 'timestamp'}\n      };\n      this.itemsRef.push(payload).then(() => this.inProgress = false);\n    }\n  }\n\n  /**\n   * Method to send a reaction to a status to Firebase\n   * @param {string} reaction\n   * @param feed\n   */\n  react(reaction: string, feed: any) {\n    if (this.reactions.indexOf(reaction) > -1) {\n      const reactions: any = {};\n      const count: number = isNaN(parseInt(feed.payload.val()[reaction], 10)) ? 0 : parseInt(feed.payload.val()[reaction], 10);\n      reactions[reaction] = count + 1;\n      this.itemsRef.update(feed.key, reactions);\n    }\n  }\n\n  /**\n   * Method to get the recent feeds from Firebase\n   */\n  latestFeeds() {\n    this.items = this.itemsRef.snapshotChanges().pipe(\n      map(r => {\n        r.sort((x: any, y: any) => {\n          const a = x.payload.val().createdAt;\n          const b = y.payload.val().createdAt;\n          return a  b ? 1 : 0;\n        });\n        return r.reverse();\n      })\n    );\n  }\n\n  /**\n   * Method to check the validity of a status update\n   * @param {string} status\n   * @returns {boolean}\n   */\n  valid(status: string): boolean {\n    return status.trim().length >= this.minLength && status.trim().length \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedsModule.html":{"url":"modules/FeedsModule.html","title":"module - FeedsModule","body":"\n                   \n\n\n\n\n  Modules\n  FeedsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedsModule\n\n\n\ncluster_FeedsModule_declarations\n\n\n\ncluster_FeedsModule_imports\n\n\n\ncluster_FeedsModule_exports\n\n\n\ncluster_FeedsModule_providers\n\n\n\n\nFeedBoxComponent\n\nFeedBoxComponent\n\n\n\nFeedsModule\n\nFeedsModule\n\nFeedsModule -->\n\nFeedBoxComponent->FeedsModule\n\n\n\n\n\nFeedBoxComponent \n\nFeedBoxComponent \n\nFeedBoxComponent  -->\n\nFeedsModule->FeedBoxComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nFeedsModule -->\n\nMaterialModule->FeedsModule\n\n\n\n\n\nFeedsApiService\n\nFeedsApiService\n\nFeedsModule -->\n\nFeedsApiService->FeedsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/feeds/feeds.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FeedBoxComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FeedsApiService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FeedBoxComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {MaterialModule} from '../app.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FeedBoxComponent} from './components/feed-box/feed-box.component';\nimport {FeedsApiService} from './services/feeds-api.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MaterialModule,\n    HttpClientModule,\n    HttpClientModule\n  ],\n  declarations: [\n    FeedBoxComponent\n  ],\n  providers: [\n    FeedsApiService\n  ],\n  exports: [FeedBoxComponent]\n})\nexport class FeedsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFireDatabaseModule} from 'angularfire2/database';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatCardModule,\n    MatIconModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n  ]\n})\nexport class MaterialModule {\n}\n\nconst config = {\n  apiKey: 'AIzaSyCi9LMwCAjX02Mp2ttHlJ-Ys3rZDqQiA6k',\n  authDomain: 'my-project-1526496472002.firebaseapp.com',\n  databaseURL: 'https://my-project-1526496472002.firebaseio.com',\n  projectId: 'my-project-1526496472002',\n  storageBucket: 'my-project-1526496472002.appspot.com',\n  messagingSenderId: '869849331288'\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MaterialModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(config),\n    AngularFireDatabaseModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/interfaces/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        location\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  name: string;\n  age: number;\n  email: string;\n  location: string;\n  createdAt?: any;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserApiService.html":{"url":"injectables/UserApiService.html","title":"injectable - UserApiService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/services/user-api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                inProgress\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                itemsRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addFriend\n                            \n                            \n                                updating\n                            \n                            \n                                usersList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/services/user-api.service.ts:20\n                            \n                        \n\n                \n                    \n                            Class constructor, injects the angular fire database as db for users\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addFriend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addFriend(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/services/user-api.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Method to add a friend to Firebase\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updating\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdating()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/services/user-api.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Method to check the in progress flag\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            usersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nusersList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/services/user-api.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Method to get the recent status feeds from Firebase of a selected or active user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inProgress:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/services/user-api.service.ts:12\n                            \n                        \n\n                \n                    \n                        Flag to see if status update is in progress\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/services/user-api.service.ts:20\n                            \n                        \n\n                \n                    \n                        All the user/ friends available to the logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemsRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsRef:     AngularFireList\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/services/user-api.service.ts:16\n                            \n                        \n\n                \n                    \n                        angular fire list ref for user\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireList} from 'angularfire2/database';\nimport {Observable} from 'rxjs';\nimport {User} from '../interfaces/user';\n\n@Injectable()\nexport class UserApiService {\n  /**\n   * Flag to see if status update is in progress\n   * @type {boolean}\n   */\n  private inProgress = false;\n  /**\n   * angular fire list ref for user\n   */\n  public itemsRef: AngularFireList;\n  /**\n   * All the user/ friends available to the logged in user\n   */\n  public items: Observable;\n\n  /**\n   * Class constructor, injects the angular fire database as db for users\n   * @param {AngularFireDatabase} db\n   */\n  constructor(private db: AngularFireDatabase) {\n    this.itemsRef = this.db.list('/user');\n  }\n\n  /**\n   * Method to add a friend to Firebase\n   * @param {User} user\n   */\n  public addFriend(user: User) {\n    if (!this.updating()) {\n      this.inProgress = true;\n      const payload = {\n        name: user.name,\n        age: user.age,\n        location: user.location,\n        createdAt: {'.sv': 'timestamp'}\n      };\n      this.itemsRef.push(payload).then(() => this.inProgress = false);\n    }\n  }\n\n  /**\n   * Method to get the recent status feeds from Firebase of a selected or active user\n   */\n  usersList() {\n    this.items = this.itemsRef.snapshotChanges();\n  }\n\n  /**\n   * Method to check the in progress flag\n   * @returns {boolean}\n   */\n  updating(): boolean {\n    return this.inProgress;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n  Modules\n  UserModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAddFriendComponent\n\nAddFriendComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAddFriendComponent->UserModule\n\n\n\n\n\nFeedsModule\n\nFeedsModule\n\nUserModule -->\n\nFeedsModule->UserModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nUserModule -->\n\nMaterialModule->UserModule\n\n\n\n\n\nUserApiService\n\nUserApiService\n\nUserModule -->\n\nUserApiService->UserModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddFriendComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddFriendComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     UserApiService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FeedsModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {MaterialModule} from '../app.module';\nimport {FeedsModule} from '../feeds/feeds.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {UserApiService} from './services/user-api.service';\nimport {AddFriendComponent} from './add-friend/add-friend.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    MaterialModule,\n    FeedsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    AddFriendComponent\n  ],\n  providers: [\n    UserApiService\n  ],\n  entryComponents: [AddFriendComponent],\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app-routing.module.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                config\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/dashboard/components/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                    src/app/dashboard/dashboard-routing.module.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/feeds/components/feed-box/feed-box.component.ts\n            \n            \n                component\n            \n            \n                FeedBoxComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/feeds/services/feeds-api.service.ts\n            \n            \n                injectable\n            \n            \n                FeedsApiService\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    src/app/user/add-friend/add-friend.component.ts\n            \n            \n                component\n            \n            \n                AddFriendComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/user/interfaces/user.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/user/services/user-api.service.ts\n            \n            \n                injectable\n            \n            \n                UserApiService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/cdk : ^6.2.1\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/flex-layout : ^5.0.0-beta.14\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/material : ^6.2.1\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            @compodoc/compodoc : ^1.1.3\n        \n            angularfire2 : ^5.0.0-rc.10\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.0.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.2.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSocial Feed\nDownload\nRun git clone https://github.com/kushwahashiv/social-feed.git to clone the source code on your local machine. \nInstall\nRun npm install to install npm app dependencies\nRun\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nDocs\nRun npm run doc to build the project document. The build artifacts will be stored in the documentation/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nApp screen dump\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_FeedsModule\n\n\n\ncluster_FeedsModule_declarations\n\n\n\ncluster_FeedsModule_exports\n\n\n\ncluster_FeedsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nMaterialModule->DashboardModule\n\n\n\n\n\nFeedsModule\n\nFeedsModule\n\nFeedsModule -->\n\nMaterialModule->FeedsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nMaterialModule->UserModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\nDashboardModule -->\n\nFeedsModule->DashboardModule\n\n\n\nUserModule -->\n\nFeedsModule->UserModule\n\n\n\n\n\nFeedBoxComponent \n\nFeedBoxComponent \n\nFeedBoxComponent  -->\n\nFeedsModule->FeedBoxComponent \n\n\n\nDashboardModule -->\n\nUserModule->DashboardModule\n\n\n\n\n\nFeedBoxComponent\n\nFeedBoxComponent\n\nFeedsModule -->\n\nFeedBoxComponent->FeedsModule\n\n\n\n\n\nFeedsApiService\n\nFeedsApiService\n\nFeedsModule -->\n\nFeedsApiService->FeedsModule\n\n\n\n\n\nAddFriendComponent\n\nAddFriendComponent\n\nUserModule -->\n\nAddFriendComponent->UserModule\n\n\n\n\n\nUserApiService\n\nUserApiService\n\nUserModule -->\n\nUserApiService->UserModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            7 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routes   (src/.../app-routing.module.ts)\n                        \n                        \n                            routes   (src/.../dashboard-routing.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiKey: 'AIzaSyCi9LMwCAjX02Mp2ttHlJ-Ys3rZDqQiA6k',\n  authDomain: 'my-project-1526496472002.firebaseapp.com',\n  databaseURL: 'https://my-project-1526496472002.firebaseio.com',\n  projectId: 'my-project-1526496472002',\n  storageBucket: 'my-project-1526496472002.appspot.com',\n  messagingSenderId: '869849331288'\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     Route[]\n\n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    component: AppComponent,\n    children: [\n      {path: '', loadChildren: 'src/app/dashboard/dashboard.module#DashboardModule'}\n    ]\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/dashboard/dashboard-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     Route[]\n\n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {path: '', component: DashboardComponent}\n]\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
